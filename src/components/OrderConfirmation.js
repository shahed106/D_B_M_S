 import React, { useState, useEffect } from 'react';
import './OrderConfirmation.css';

const OrderConfirmation = ({ orderData, paymentData, onGoBackToDashboard }) => {
  const [estimatedDelivery, setEstimatedDelivery] = useState('');
  const [orderStatus] = useState('confirmed');

  useEffect(() => {
    // Calculate estimated delivery date (3-5 days from now)
    const deliveryDate = new Date();
    deliveryDate.setDate(deliveryDate.getDate() + Math.floor(Math.random() * 3) + 3);
    setEstimatedDelivery(deliveryDate.toLocaleDateString('bn-BD', {
      weekday: 'long',
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    }));

    // Save order to localStorage
    const orderRecord = {
      id: `GK${Date.now()}`,
      timestamp: new Date().toISOString(),
      status: 'confirmed',
      shop: orderData.shop,
      medicines: orderData.medicines,
      payment: paymentData,
      total: orderData.total,
      deliveryDate: deliveryDate.toISOString(),
      prescription: orderData.prescription
    };

    const existingOrders = JSON.parse(localStorage.getItem('medicineOrders') || '[]');
    existingOrders.push(orderRecord);
    localStorage.setItem('medicineOrders', JSON.stringify(existingOrders));

  }, [orderData, paymentData]);

  const getStatusIcon = () => {
    switch(orderStatus) {
      case 'confirmed': return 'тЬЕ';
      case 'processing': return 'тП│';
      case 'shipped': return 'ЁЯЪЫ';
      case 'delivered': return 'ЁЯУж';
      default: return 'тЬЕ';
    }
  };

  const getStatusText = () => {
    switch(orderStatus) {
      case 'confirmed': return 'ржЕрж░рзНржбрж╛рж░ ржХржиржлрж╛рж░рзНржо рж╣ржпрж╝рзЗржЫрзЗ';
      case 'processing': return 'ржкрзНрж░ржХрзНрж░рж┐ржпрж╝рж╛ржХрж░ржг ржЪрж▓ржЫрзЗ';
      case 'shipped': return 'ржкрж╛ржарж╛ржирзЛ рж╣ржпрж╝рзЗржЫрзЗ';
      case 'delivered': return 'ржбрзЗрж▓рж┐ржнрж╛рж░ рж╣ржпрж╝рзЗржЫрзЗ';
      default: return 'ржЕрж░рзНржбрж╛рж░ ржХржиржлрж╛рж░рзНржо рж╣ржпрж╝рзЗржЫрзЗ';
    }
  };

  const downloadOrderReceipt = () => {
    const receiptContent = `
ржЧрзНрж░рж╛ржорзАржг ржХрзГрж╖рж┐ ржЕрж░рзНржбрж╛рж░ рж░рж╕рж┐ржж
========================

ржЕрж░рзНржбрж╛рж░ ржЖржЗржбрж┐: GK${Date.now()}
рждрж╛рж░рж┐ржЦ: ${new Date().toLocaleDateString('bn-BD')}
рж╕ржоржпрж╝: ${new Date().toLocaleTimeString('bn-BD')}

ржжрзЛржХрж╛ржирзЗрж░ рждржерзНржп:
${orderData.shop.name}
${orderData.shop.address}
ржлрзЛржи: ${orderData.shop.phone}

ржУрж╖рзБржзрзЗрж░ рждрж╛рж▓рж┐ржХрж╛:
${orderData.medicines.map(med => `${med.name} - ${med.quantity} ржЯрж┐ - рз│${med.totalPrice}`).join('\n')}

ржкрзЗржорзЗржирзНржЯ рждржерзНржп:
ржкржжрзНржзрждрж┐: ${paymentData.method}
ржЯрзНрж░рж╛ржирзНрж╕ржЕрзНржпрж╛ржХрж╢ржи ржЖржЗржбрж┐: ${paymentData.transactionId}

ржорзЛржЯ ржжрж╛ржо: рз│${orderData.total}
ржЖржирзБржорж╛ржирж┐ржХ ржбрзЗрж▓рж┐ржнрж╛рж░рж┐: ${estimatedDelivery}

ржзржирзНржпржмрж╛ржж!
    `;

    const blob = new Blob([receiptContent], { type: 'text/plain' });
    const url = window.URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `grameen-krishi-order-${Date.now()}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    window.URL.revokeObjectURL(url);
  };

  return (
    <div className="order-confirmation">
      <div className="confirmation-container">
        {/* Success Header */}
        <div className="success-header">
          <div className="success-icon">
            {getStatusIcon()}
          </div>
          <h1>ржЕрж░рзНржбрж╛рж░ рж╕ржорзНржкржирзНржи!</h1>
          <p className="success-messag">
            ржЖржкржирж╛рж░ ржУрж╖рзБржзрзЗрж░ ржЕрж░рзНржбрж╛рж░ рж╕ржлрж▓ржнрж╛ржмрзЗ рж╕ржорзНржкржирзНржи рж╣ржпрж╝рзЗржЫрзЗ
          </p>
        </div>

        {/* Order Details */}
        <div className="order-details-section">
          <div className="order-info-card">
            <h3>ржЕрж░рзНржбрж╛рж░ рждржерзНржп</h3>
            <div className="order-info-grid">
              <div className="info-item">
                <span className="label">ржЕрж░рзНржбрж╛рж░ ржЖржЗржбрж┐:</span>
                <span className="value">GK{Date.now()}</span>
              </div>
              <div className="info-item">
                <span className="label">ржЕрж░рзНржбрж╛рж░рзЗрж░ рждрж╛рж░рж┐ржЦ:</span>
                <span className="value">{new Date().toLocaleDateString('bn-BD')}</span>
              </div>
              <div className="info-item">
                <span className="label">рж╕рзНржЯрзНржпрж╛ржЯрж╛рж╕:</span>
                <span className="value status">{getStatusText()}</span>
              </div>
              <div className="info-item">
                <span className="label">ржЖржирзБржорж╛ржирж┐ржХ ржбрзЗрж▓рж┐ржнрж╛рж░рж┐:</span>
                <span className="value delivery">{estimatedDelivery}</span>
              </div>
            </div>
          </div>

          {/* Shop Information */}
          <div className="shop-info-card">
            <h3>ржжрзЛржХрж╛ржирзЗрж░ рждржерзНржп</h3>
            <div className="shop-details">
              <div className="shop-header">
                <div className="shop-icon">ЁЯПк</div>
                <div>
                  <h4>{orderData.shop.name}</h4>
                  <p>{orderData.shop.address}</p>
                  <p>ЁЯУЮ {orderData.shop.phone}</p>
                </div>
              </div>
            </div>
          </div>

          {/* Medicine List */}
          <div className="medicines-list-card">
            <h3>ржЕрж░рзНржбрж╛рж░ржХрзГржд ржУрж╖рзБржз</h3>
            <div className="medicines-list">
              {orderData.medicines.map((medicine, index) => (
                <div key={index} className="medicine-item">
                  <div className="medicine-info">
                    <h4>{medicine.name}</h4>
                    <p>{medicine.dosage}</p>
                  </div>
                  <div className="medicine-quantity">
                    <span>ржкрж░рж┐ржорж╛ржг: {medicine.quantity}</span>
                  </div>
                  <div className="medicine-price">
                    <span>рз│{medicine.totalPrice}</span>
                  </div>
                </div>
              ))}
            </div>
            <div className="medicines-total">
              <strong>ржорзЛржЯ: рз│{orderData.total}</strong>
            </div>
          </div>

          {/* Payment Information */}
          <div className="payment-info-card">
            <h3>ржкрзЗржорзЗржирзНржЯ рждржерзНржп</h3>
            <div className="payment-details">
              <div className="payment-item">
                <span className="label">ржкрзЗржорзЗржирзНржЯ ржкржжрзНржзрждрж┐:</span>
                <span className="value">{paymentData.method}</span>
              </div>
              <div className="payment-item">
                <span className="label">ржЯрзНрж░рж╛ржирзНрж╕ржЕрзНржпрж╛ржХрж╢ржи ржЖржЗржбрж┐:</span>
                <span className="value">{paymentData.transactionId}</span>
              </div>
              <div className="payment-item">
                <span className="label">ржкрзЗржорзЗржирзНржЯ рж╕ржоржпрж╝:</span>
                <span className="value">{new Date(paymentData.timestamp).toLocaleString('bn-BD')}</span>
              </div>
              <div className="payment-item total">
                <span className="label">ржорзЛржЯ ржкрзЗржорзЗржирзНржЯ:</span>
                <span className="value">рз│{orderData.total}</span>
              </div>
            </div>
          </div>
        </div>

        {/* Action Buttons */}
        <div className="action-buttons">
          <button className="download-btn" onClick={downloadOrderReceipt}>
            ЁЯУД рж░рж╕рж┐ржж ржбрж╛ржЙржирж▓рзЛржб ржХрж░рзБржи
          </button>
          <button className="track-order-btn">
            ЁЯУН ржЕрж░рзНржбрж╛рж░ ржЯрзНрж░рзНржпрж╛ржХ ржХрж░рзБржи
          </button>
          <button className="dashboard-btn" onClick={onGoBackToDashboard}>
            ЁЯПа ржбрзНржпрж╛рж╢ржмрзЛрж░рзНржбрзЗ ржлрж┐рж░рзЗ ржпрж╛ржи
          </button>
        </div>

        {/* Additional Information */}
        <div className="additional-info">
          <div className="info-card">
            <h4>ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг рждржерзНржп</h4>
            <ul>
              <li>ржЖржкржирж╛рж░ ржЕрж░рзНржбрж╛рж░ {estimatedDelivery} рждрж╛рж░рж┐ржЦрзЗрж░ ржоржзрзНржпрзЗ ржкрзМржБржЫрж╛ржмрзЗ</li>
              <li>ржбрзЗрж▓рж┐ржнрж╛рж░рж┐рж░ рж╕ржоржпрж╝ ржЕржмрж╢рзНржпржЗ ржкрзНрж░рзЗрж╕ржХрзНрж░рж┐ржкрж╢ржи ржжрзЗржЦрж╛рждрзЗ рж╣ржмрзЗ</li>
              <li>ржХрзЛржирзЛ рж╕ржорж╕рзНржпрж╛ рж╣рж▓рзЗ ржжрзЛржХрж╛ржирзЗрж░ рж╕рж╛ржерзЗ ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржи</li>
              <li>ржУрж╖рзБржз рж░рж┐ржЯрж╛рж░рзНржирзЗрж░ ржЬржирзНржп рзн ржжрж┐ржирзЗрж░ ржЧрзНржпрж╛рж░рж╛ржирзНржЯрж┐ рж░ржпрж╝рзЗржЫрзЗ</li>
            </ul>
          </div>

          <div className="support-card">
            <h4>рж╕рж╣рж╛ржпрж╝рждрж╛рж░ ржЬржирзНржп ржпрзЛржЧрж╛ржпрзЛржЧ</h4>
            <p>ЁЯУЮ ржХрж╛рж╕рзНржЯржорж╛рж░ ржХрзЗржпрж╝рж╛рж░: рззрзмрзирзмрзй</p>
            <p>ЁЯУз ржЗржорзЗржЗрж▓: support@grameenkrishi.com</p>
            <p>ЁЯХР рж╕рзЗржмрж╛рж░ рж╕ржоржпрж╝: рж╕ржХрж╛рж▓ рзпржЯрж╛ - рж░рж╛ржд рзпржЯрж╛</p>
          </div>
        </div>

        {/* Thank You Message */}
        <div className="thank-you-message">
          <h3>ржзржирзНржпржмрж╛ржж!</h3>
          <p>ржЧрзНрж░рж╛ржорзАржг ржХрзГрж╖рж┐рж░ рж╕рж╛ржерзЗ ржерж╛ржХрж╛рж░ ржЬржирзНржп ржЖржкржирж╛ржХрзЗ ржзржирзНржпржмрж╛ржжред ржЖржкржирж╛рж░ рж╕рзНржмрж╛рж╕рзНржерзНржп ржЖржорж╛ржжрзЗрж░ ржЕржЧрзНрж░рж╛ржзрж┐ржХрж╛рж░ред</p>
        </div>
      </div>
    </div>
  );
};

export default OrderConfirmation;
